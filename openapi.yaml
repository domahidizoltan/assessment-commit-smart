openapi: 3.0.3
info:
  title: CommIT Smart Backend Assignment - OpenAPI 3.0
  version: "1.0"
servers:
  - url: http://localhost:8000/api/v1
tags:
  - name: user
    description: User management API
paths:
  /users:
    get:
      tags:
        - user
      summary: List users
      operationId: listUsers
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
        - user
      summary: Create user
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
  /users/{id}:
    get:
      tags:
        - user
      summary: Fetching existing user
      operationId: getUser
      parameters:
        - name: id
          in: path
          description: 'The ID of the user'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
        '404':
          description: User not found
    put:
      tags:
        - user
      summary: Update user
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: 'The ID of the user'
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent user in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
        '404':
          description: User not found
    delete:
      tags:
        - user
      summary: Delete user
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: 'The ID of the user'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: successful operation
        '404':
          description: User not found
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
          example: theUser
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
